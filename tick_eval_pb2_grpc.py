# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import tick_eval_pb2 as tick__eval__pb2


class TickEvalStub(object):
  """Interface exported by the server.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.EvalSingle = channel.unary_unary(
        '/tickeval.TickEval/EvalSingle',
        request_serializer=tick__eval__pb2.BarPos.SerializeToString,
        response_deserializer=tick__eval__pb2.OrderResponse.FromString,
        )
    self.StopServer = channel.unary_unary(
        '/tickeval.TickEval/StopServer',
        request_serializer=tick__eval__pb2.ServerDet.SerializeToString,
        response_deserializer=tick__eval__pb2.StopResponse.FromString,
        )


class TickEvalServicer(object):
  """Interface exported by the server.
  """

  def EvalSingle(self, request, context):
    """A simple RPC.

    Evaluates a single tradestation tick (or bar)
    and returns an order type if position needs to be adjusted
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopServer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TickEvalServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'EvalSingle': grpc.unary_unary_rpc_method_handler(
          servicer.EvalSingle,
          request_deserializer=tick__eval__pb2.BarPos.FromString,
          response_serializer=tick__eval__pb2.OrderResponse.SerializeToString,
      ),
      'StopServer': grpc.unary_unary_rpc_method_handler(
          servicer.StopServer,
          request_deserializer=tick__eval__pb2.ServerDet.FromString,
          response_serializer=tick__eval__pb2.StopResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'tickeval.TickEval', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
